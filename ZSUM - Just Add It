#include <iostream>
#define MOD 10000007
using namespace std;

long long binpow(long long a, long long b, long long m) {
    a %= m;
    long long res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a % m;
        a = a * a % m;
        b >>= 1;
    }
    return res;
}
// Using this function we get TLE, so we minimized the equation
long long Zn(long long n,long long k){
	long long sn=0;
	long long pn = 0;
	for(long long i=1;i<=n;i++){
		long long temp = binpow(i,k,MOD);
		sn += temp;
		temp = binpow(i,i,MOD);
		pn += temp;
	}
	return ((sn%MOD)+(pn%MOD))%MOD;
}

int main() {
	// your code goes here
	long long Z;
	long long n,k;
	while(true){
	cin>>n;
	cin>>k;
	if(n==0 && k == 0)
	break;
	long long res;
	//res = ((Zn(n,k)%MOD)+(Zn(n-1,k)%MOD)-(2*Zn(n-2,k))%MOD)%MOD;
	res = (2*binpow(n-1,k,MOD) + 2*binpow(n-1,n-1,MOD)+ binpow(n,k,MOD) + binpow(n,n,MOD))%MOD;
	cout<<res<<endl;
	}
	
	return 0;
}
