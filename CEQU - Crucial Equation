#include <iostream>
using namespace std;

//extended euclidean algo
int gcd(int a,int b,int &x,int &y){
	if(b==0){
		x = 1;
		y = 0;
		return a;
	}
	int x1,y1;
	int d = gcd(b,a%b,x1,y1);
	x = y1;
	y = x1 - y1*(a/b);
	return d;
}
// linear diophantine quation
bool find_any_solution(int a,int b,int c, int &x0,int &y0,int &g){
	g = gcd(abs(a), abs(b),x0,y0);
	if(c%g){
		return false;
	}
	x0 *= c/g;
	y0 *= c/g;
	if(a<0) x0 = -x0;
	if(b<0) y0 = -y0;
	return true;
}

int main() {
	// your code goes here
	int T;
	cin>>T;
	int e = 1;
	while(T--){
		int a,b,c,g,x,y;
		cin>>a;
		cin>>b;
		cin>>c;
		g = gcd(a,b,x,y);
		if(find_any_solution(a,b,c,x,y,g)){
			cout<<"Case "<<e<<": "<<"Yes"<<endl;
		}else{
			cout<<"Case "<<e<<": "<<"No"<<endl;
		}
		e++;
	}
	return 0;
}
